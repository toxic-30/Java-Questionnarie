1. What are the new features introduced in Java 8?
->
2. What is a lambda expression?
->
3. Syntax of lambda expression in Java?
4. Difference between lambda expression and anonymous class.

5. What is a functional interface?
-> A interface is functional interface when it have only 1 abstract method, it can have default and static both.
   but the abstract method should be one and only.

6. Give examples of built-in functional interfaces in Java 8.
-> Here are the list of few built-in functional interface -
   Predicate (returns boolean), Function (input → output),Consumer (input → no output),
   Supplier (no input → output), BiFunction, BiPredicate, BiConsumer, UnaryOperator, BinaryOperator,
   Also, older interfaces like Runnable, Callable, Comparator are functional interfaces.

7. What is the @FunctionalInterface annotation?
-> @FunctionalInterface annotation marks an interface as a functional interface

8. Explain Predicate<T> functional interface.
9. Explain Function<T, R> functional interface.
10. Explain Supplier<T> functional interface.
11. Explain Consumer<T> functional interface.
12. What is the difference between Predicate and Function?
12. What is method reference in Java 8?
13. Types of method references in Java 8.
14. Difference between static method reference and instance method reference.
15. What are streams in Java 8?
16. Difference between intermediate and terminal operations in streams.
17. What are short-circuiting operations in streams?
18. Difference between map() and flatMap().
19. What is the difference between forEach() and forEachOrdered()?
20. Difference between findFirst() and findAny().
21. What is the difference between sequential streams and parallel streams?
22. When should you use parallel streams?
23. What is Collectors.toList() in streams?
24. How to perform groupingBy in streams?
25. What is partitioningBy in streams?
26. Difference between reduce() and collect().
27. Can streams be reused once consumed?
28. Difference between lazy evaluation and eager evaluation in streams.
29. What is Optional in Java 8?
30. Why was Optional introduced in Java?
31. Difference between Optional.of(), Optional.ofNullable(), and Optional.empty().
32. What is orElse() vs orElseGet() in Optional?
33. What is orElseThrow() in Optional?
34. How do you chain Optionals?
35. Can Optional be serialized?
36. Why is Optional not Serializable by default?
37. What is the difference between Stream API and Iterator?
38. What is the difference between map-reduce in Java 8 vs Hadoop?
39. What are default methods in interfaces?
40. What are static methods in interfaces?
41. Difference between default methods and abstract methods.
42. Can default methods be overridden in implementing class?
43. What is Nashorn in Java 8?
44. What is the difference between Predicate chaining using and() and or()?
45. What is the peek() method in streams?
46. What is distinct() in streams?
47. How does limit() and skip() work in streams?
48. What is the difference between sorted() with comparator vs natural order?
49. Explain the concept of effectively final in Java 8.